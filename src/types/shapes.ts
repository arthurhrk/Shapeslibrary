
/**
 * PowerPoint shape type definitions compatible with PptxGenJS
 */
export type ShapeType =
  // Basic shapes
  | "rectangle"
  | "roundRectangle"
  | "ellipse"
  | "triangle"
  | "diamond"
  | "pentagon"
  | "hexagon"
  | "octagon"
  | "star"
  | "parallelogram"
  | "trapezoid"
  | "heart"
  | "plus"
  | "minus"
  | "cross"
  // Arrows
  | "leftArrow"
  | "rightArrow"
  | "upArrow"
  | "downArrow"
  | "leftRightArrow"
  | "upDownArrow"
  | "quadArrow"
  | "bentArrow"
  | "uturnArrow"
  | "circularArrow"
  | "notchedRightArrow"
  | "chevron"
  | "rightArrowCallout"
  | "leftArrowCallout"
  | "upArrowCallout"
  | "downArrowCallout"
  // Flowchart
  | "flowChartProcess"
  | "flowChartAlternateProcess"
  | "flowChartDecision"
  | "flowChartInputOutput"
  | "flowChartPredefinedProcess"
  | "flowChartInternalStorage"
  | "flowChartDocument"
  | "flowChartMultidocument"
  | "flowChartTerminator"
  | "flowChartPreparation"
  | "flowChartManualInput"
  | "flowChartManualOperation"
  | "flowChartConnector"
  | "flowChartOffpageConnector"
  | "flowChartPunchedCard"
  | "flowChartPunchedTape"
  | "flowChartSummingJunction"
  | "flowChartOr"
  | "flowChartCollate"
  | "flowChartSort"
  | "flowChartExtract"
  | "flowChartMerge"
  | "flowChartOnlineStorage"
  | "flowChartDelay"
  | "flowChartMagneticTape"
  | "flowChartMagneticDisk"
  | "flowChartMagneticDrum"
  | "flowChartDisplay"
  // Callouts
  | "wedgeRectCallout"
  | "wedgeRoundRectCallout"
  | "wedgeEllipseCallout"
  | "cloudCallout"
  | "borderCallout1"
  | "borderCallout2"
  | "borderCallout3"
  | "accentCallout1"
  | "accentCallout2"
  | "accentCallout3"
  | "callout1"
  | "callout2"
  | "callout3"
  | "accentBorderCallout1"
  | "accentBorderCallout2"
  | "accentBorderCallout3";

/**
 * Shape category for organization
 */
export type ShapeCategory = "basic" | "arrows" | "flowchart" | "callouts";

/**
 * Fill properties for shapes
 */
export interface ShapeFill {
  color?: string;
  transparency?: number;
  type?: "solid" | "gradient";
}

/**
 * Line/border properties for shapes
 */
export interface ShapeLine {
  color?: string;
  width?: number;
  dashType?: "solid" | "dash" | "dot" | "dashDot" | "lgDash" | "lgDashDot" | "lgDashDotDot" | "sysDash" | "sysDot";
  transparency?: number;
}

/**
 * Shadow properties for shapes
 */
export interface ShapeShadow {
  type: "outer" | "inner";
  color?: string;
  blur?: number;
  offset?: number;
  angle?: number;
  opacity?: number;
}

/**
 * PptxGenJS shape definition properties
 */
export interface PptxShapeDefinition {
  type: ShapeType;
  x: number; // Position X in inches
  y: number; // Position Y in inches
  w: number; // Width in inches
  h: number; // Height in inches
  fill?: ShapeFill;
  line?: ShapeLine;
  shadow?: ShapeShadow;
  rotate?: number; // Rotation in degrees
  flipH?: boolean;
  flipV?: boolean;
  adj?: number[]; // Adjustment values for certain shapes
  rectRadius?: number; // Rounded rect corner radius when applicable
}

/**
 * Complete shape information stored in JSON
 */
export interface ShapeInfo {
  id: string; // Unique identifier
  name: string; // Display name
  category: ShapeCategory;
  description?: string; // Optional description
  tags?: string[]; // Search tags
  preview: string; // Path to preview image (relative to assets/)
  pptxDefinition?: PptxShapeDefinition; // For generated shapes
  nativePptx?: string; // Relative path under assets for 100% fidelity capture
  deckSlide?: number; // Slide index inside library deck (if using deck)
  nativeOnly?: boolean; // True when this shape must be inserted from native PPTX (e.g., groups, pictures)
}

/**
 * Cache entry for shape data
 */
export interface ShapeCacheEntry {
  shapes: ShapeInfo[];
  lastModified: number;
  category: ShapeCategory;
}

/**
 * Cache structure for all categories
 */
export interface ShapeCache {
  [category: string]: ShapeCacheEntry;
}

/**
 * Preferences type definition (auto-generated by Raycast from package.json)
 */
export interface Preferences {
  enableCache: boolean;
  autoCleanup: boolean;
  libraryPath?: string;
  autoSaveAfterCapture?: boolean;
  skipNativeSave?: boolean;
  forceExactShapes?: boolean;
  useLibraryDeck?: boolean;
  defaultCategory: "all" | ShapeCategory;
}

/**
 * Dropdown option for category filter
 */
export interface CategoryOption {
  title: string;
  value: string;
}
